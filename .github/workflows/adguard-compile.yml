name: Compile sing-box Geosite and Geoip

on:
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:

jobs:
  compile-geosite-srs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Necessary Tools
        run: |
          sudo apt install -y curl wget git

      - name: Install sing-box
        run: |
          sudo curl -fsSL https://sing-box.app/gpg.key -o /etc/apt/keyrings/sagernet.asc
          sudo chmod a+r /etc/apt/keyrings/sagernet.asc
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/sagernet.asc] https://deb.sagernet.org/ * *" | \
          sudo tee /etc/apt/sources.list.d/sagernet.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y --allow-downgrades sing-box=1.8.14

      - name: Prepare Folders
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          mkdir -p geosite geoip

      - name: Download db
        run: |
          wget -O geosite.db https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.db
          wget -O geoip.db https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip.db

      - name: Export telegram Json
        run: |
          sing-box geosite -f geosite.db export telegram
          sing-box geoip -f geoip.db export telegram

      - name: Compile telegram Source
        run: |
          sing-box rule-set compile --output geosite/geosite-telegram.srs geosite-telegram.json
          sing-box rule-set compile --output geoip/geoip-telegram.srs geoip-telegram.json

      - name: Export google-scholar Json
        run: |
          sing-box geosite -f geosite.db export google-scholar

      - name: Compile google-scholar Source
        run: |
          sing-box rule-set compile --output geosite/geosite-google-scholar.srs geosite-google-scholar.json

      - name: Export google Json
        run: |
          sing-box geosite -f geosite.db export google
          sing-box geoip -f geoip.db export google

      - name: Compile google Source
        run: |
          sing-box rule-set compile --output geosite/geosite-google.srs geosite-google.json
          sing-box rule-set compile --output geoip/geoip-google.srs geoip-google.json

      - name: Export win-update Json
        run: |
          sing-box geosite -f geosite.db export win-update

      - name: Compile win-update Source
        run: |
          sing-box rule-set compile --output geosite/geosite-win-update.srs geosite-win-update.json

      - name: Export netflix Json
        run: |
          sing-box geosite -f geosite.db export netflix
          sing-box geoip -f geoip.db export netflix

      - name: Compile netflix Source
        run: |
          sing-box rule-set compile --output geosite/geosite-netflix.srs geosite-netflix.json
          sing-box rule-set compile --output geoip/geoip-netflix.srs geoip-netflix.json

      - name: Push Files
        run: |
          # 切换到 Release 分支（如果存在），否则创建并跟踪远程 Release 分支
          if git show-ref --quiet refs/heads/Release; then
              git checkout Release
          else
              git checkout -b Release --track origin/Release 2>/dev/null || git checkout -b Release
          fi

          # 确保本地分支与远程同步（如果跟踪关系存在）
          if git config branch.Release.remote >/dev/null; then
              echo "Updating repository with latest remote content..."
              git fetch origin Release
              git reset --hard origin/Release
          fi

          # 强制更新 Release 分支
          echo "Force updating repository with local content..."
          git add geosite geoip
          git commit -m "Update srs files" || echo "Nothing to commit"
          git push --force origin Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
